// SolarCalculation On-Grid v4.2 by mpplearning
// License: Non-Commercial Use Only
// Contact: punmanee@gmail.com

document.addEventListener("DOMContentLoaded", function () {
    const monthlyBillInput = document.getElementById("monthlyBill");
    const resultDiv = document.getElementById("results");

    if (monthlyBillInput) {
        monthlyBillInput.addEventListener("input", function () {
            let raw = this.value.replace(/,/g, '');
            if (!isNaN(raw) && raw !== "") {
                this.value = parseFloat(raw).toLocaleString();
            } else if (raw === "") {
                this.value = "";
            }
        });
    }

    const calcBtn = document.getElementById("calculateBtn");
    if (calcBtn) {
        calcBtn.addEventListener("click", calculateOnGrid);
    }

    const resetBtn = document.getElementById("resetBtn");
    if (resetBtn) {
        resetBtn.addEventListener("click", resetForm);
    }
});

function calculateOnGrid() {
    const billInput = document.getElementById("monthlyBill");
    const dayPercentInput = document.getElementById("dayUsagePercent");
    const resultDiv = document.getElementById("results");

    const bill = parseFloat(billInput.value.replace(/,/g, ''));
    const dayPercent = parseFloat(dayPercentInput.value);

    if (isNaN(bill) || bill <= 0) {
        resultDiv.innerHTML = `
            <div class="error-box">
                ‚ö†Ô∏è <strong>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</strong><br>
                ‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏ö‡∏≤‡∏ó
            </div>
        `;
        return;
    }

    if (isNaN(dayPercent) || dayPercent < 0 || dayPercent > 100) {
        resultDiv.innerHTML = `
            <div class="error-box">
                ‚ö†Ô∏è <strong>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô (0‚Äì100%)</strong><br>
                ‚ùå ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å: ${dayPercentInput.value || "‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤"}
            </div>
        `;
        return;
    }

    const rate = 4.5;
    const avgSunHours = 5;
    const efficiency = 0.8;

    const dayUsageRatio = dayPercent / 100;
    const monthlyKWh = bill / rate;
    const dailyKWh = monthlyKWh / 30;
    const dayUsageKWh = dailyKWh * dayUsageRatio;
    const solarKW = dayUsageKWh / avgSunHours / efficiency;
    const dailySolarKWh = solarKW * avgSunHours;
    const monthlySolarKWh = dailySolarKWh * 30;
    const savedBill = monthlySolarKWh * rate;
    const percentSaved = (savedBill / bill) * 100;
    const remainingBill = bill - savedBill;

    const systemSizes = [
        { kw: 3, watt: 3240 }, { kw: 3.5, watt: 3780 }, { kw: 4, watt: 4320 },
        { kw: 5, watt: 5400 }, { kw: 6, watt: 6480 }, { kw: 8, watt: 8640 },
        { kw: 10, watt: 10800 }, { kw: 15, watt: 16200 }, { kw: 20, watt: 21600 },
        { kw: 30, watt: 32400 }, { kw: 40, watt: 43200 }, { kw: 50, watt: 54000 },
        { kw: 60, watt: 64800 }, { kw: 70, watt: 75600 }, { kw: 80, watt: 86400 },
        { kw: 90, watt: 97200 }, { kw: 100, watt: 108000 }
    ];

    let recommendedKW = null;
    for (let i = 0; i < systemSizes.length; i++) {
        if (solarKW <= systemSizes[i].kw) {
            recommendedKW = systemSizes[i].kw;
            break;
        }
    }
    if (!recommendedKW) {
        recommendedKW = `<span style="color:red;"><b>‚ùå ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 100kW</b> ‚Äî ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</span>`;
    }

    let installationNote = "";
    if (solarKW < 3) {
        installationNote = `<span style="color:red;"><b>‚ùå ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:</b> ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 3kW ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á</span><br>`;
    } else {
        if (typeof recommendedKW === 'number') {
            installationNote = `üìå <b>‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á:</b> ${recommendedKW} kW<br>`;
        } else {
            installationNote = `üìå <b>‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á:</b> ${recommendedKW}<br>`;
        }
    }

    const format = num => num.toLocaleString(undefined, { maximumFractionDigits: 2 });

    const result = `
        <div class="results-box">
            <div><b>üîÜ ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:</b></div>
            ‚òÄÔ∏è ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô (10:00‚Äì15:00): <b>${format(dayUsageKWh)}</b> kWh/‡∏ß‡∏±‡∏ô<br>
            ‚ö°Ô∏è ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏£‡∏ß‡∏°‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô: <b>${format(dailyKWh)}</b> kWh/‡∏ß‡∏±‡∏ô<br>
            üí° ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: <b>${format(bill)}</b> ‡∏ö‡∏≤‡∏ó (${format(monthlyKWh)} ‡∏´‡∏ô‡πà‡∏ß‡∏¢)<br><br>

            <div><b>‚öôÔ∏è ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</b></div>
            ‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: <b>${format(solarKW)}</b> kW<br>
            ${installationNote}
            ‚òÄÔ∏è ‡∏ú‡∏•‡∏¥‡∏ï‡πÑ‡∏ü‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô (5 ‡∏ä‡∏°.): <b>${format(dailySolarKWh)}</b> kWh<br>
            üîã ‡∏ú‡∏•‡∏¥‡∏ï‡πÑ‡∏ü‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: <b>${format(monthlySolarKWh)}</b> kWh<br><br>

            <div><b>üí∏ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü:</b></div>
            üìâ ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏õ‡πá‡∏ô % ‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü: <b>${format(percentSaved)}</b>%<br>
            üìà ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏•‡∏î‡∏•‡∏á‡∏à‡∏£‡∏¥‡∏á: <b>${format(savedBill)}</b> ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô<br>
            üí∞ ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢: <b>${format(remainingBill)}</b> ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô<br><br>

            <p style="color: green; font-size: 0.9em;">
                üìå ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô ‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÑ‡∏ü (10:00‚Äì15:00) ‡πÅ‡∏•‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 5 ‡∏ä‡∏°./‡∏ß‡∏±‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û 80%
            </p>
            <p style="color: gray; font-size: 0.9em;">
                Remark: ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á ‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
            </p>
        </div>
    `;

    resultDiv.innerHTML = result;
}

function resetForm() {
    document.getElementById("monthlyBill").value = "";
    document.getElementById("dayUsagePercent").value = "";
    document.getElementById("results").innerHTML = "";
}


// SolarCalculation On-Grid v4.2 by mpplearning
// License: Non-Commercial Use Only
// Contact: punmanee@gmail.com

let devicesDay = [];
let devicesNight = [];

const deviceOptions = {
    "‡∏´‡∏•‡∏≠‡∏î‡πÑ‡∏ü LED 15W": 15,
    "‡∏ó‡∏µ‡∏ß‡∏µ 50 ‡∏ô‡∏¥‡πâ‡∏ß": 150,
    "‡∏ó‡∏µ‡∏ß‡∏µ 55 ‡∏ô‡∏¥‡πâ‡∏ß": 200,
    "‡∏ó‡∏µ‡∏ß‡∏µ 65 ‡∏ô‡∏¥‡πâ‡∏ß": 250,
    "‡∏ó‡∏µ‡∏ß‡∏µ 75 ‡∏ô‡∏¥‡πâ‡∏ß": 300,
    "‡∏ó‡∏µ‡∏ß‡∏µ 85 ‡∏ô‡∏¥‡πâ‡∏ß": 400,
    "‡πÅ‡∏≠‡∏£‡πå 9000 BTU (‡πÄ‡∏ö‡∏≠‡∏£‡πå 5)": 800,
    "‡πÅ‡∏≠‡∏£‡πå 12000 BTU (‡πÄ‡∏ö‡∏≠‡∏£‡πå 5)": 1000,
    "‡πÅ‡∏≠‡∏£‡πå 15000 BTU (‡πÄ‡∏ö‡∏≠‡∏£‡πå 5)": 1300,
    "‡πÅ‡∏≠‡∏£‡πå 18000 BTU (‡πÄ‡∏ö‡∏≠‡∏£‡πå 5)": 1500,
    "‡πÅ‡∏≠‡∏£‡πå 24000 BTU (‡πÄ‡∏ö‡∏≠‡∏£‡πå 5)": 1800,
    "‡πÅ‡∏≠‡∏£‡πå 36000 BTU (‡πÄ‡∏ö‡∏≠‡∏£‡πå 5)": 2500,
    "‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô 7 ‡∏Ñ‡∏¥‡∏ß": 120,
    "‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô 12 ‡∏Ñ‡∏¥‡∏ß": 180,
    "‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô 15 ‡∏Ñ‡∏¥‡∏ß": 250,
    "‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô 18 ‡∏Ñ‡∏¥‡∏ß": 300,
    "‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô 21 ‡∏Ñ‡∏¥‡∏ß": 350,
    "‡∏û‡∏±‡∏î‡∏•‡∏°‡∏ï‡∏±‡πâ‡∏á‡∏û‡∏∑‡πâ‡∏ô": 70,
    "‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ": 100,
    "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏ï‡πä‡∏∞": 600,
    "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤": 500,
    "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏≥‡∏ô‡πâ‡∏≥‡∏≠‡∏∏‡πà‡∏ô": 3500,
    "‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡πÄ‡∏ß‡∏ü": 1500,
    "‡∏´‡∏°‡πâ‡∏≠‡∏´‡∏∏‡∏á‡∏Ç‡πâ‡∏≤‡∏ß": 700,
    "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏®": 45,
    "‡∏ä‡∏≤‡∏£‡πå‡∏à‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠": 10,
    "‡∏£‡∏ñ EV ‡∏ä‡∏≤‡∏£‡πå‡∏à‡∏ä‡πâ‡∏≤": 2200,
    "‡πÄ‡∏ï‡∏≤‡∏£‡∏µ‡∏î‡πÑ‡∏≠‡∏ô‡πâ‡∏≥": 1800
};

const systemSizes = [
    { kw: 3, watt: 3240 },
    { kw: 3.5, watt: 3780 },
    { kw: 4, watt: 4320 },
    { kw: 5, watt: 5400 },
    { kw: 6, watt: 6480 },
    { kw: 8, watt: 8640 },
    { kw: 10, watt: 10800 },
    { kw: 15, watt: 16200 },
    { kw: 20, watt: 21600 },
    { kw: 30, watt: 32400 },
    { kw: 40, watt: 43200 },
    { kw: 50, watt: 54000 },
    { kw: 60, watt: 64800 },
    { kw: 70, watt: 75600 },
    { kw: 80, watt: 86400 },
    { kw: 90, watt: 97200 },
    { kw: 100, watt: 108000 }
];

function getRecommendedSystemSize(requiredKW) {
    for (let size of systemSizes) {
        if (requiredKW <= size.kw) return size;
    }
    return null;
}

document.addEventListener("DOMContentLoaded", () => {
    const monthlyBillInput = document.getElementById("monthlyBill");
    if (monthlyBillInput) {
        monthlyBillInput.addEventListener("input", function () {
            const raw = this.value.replace(/,/g, '');
            if (!isNaN(raw) && raw !== "") {
                this.value = parseFloat(raw).toLocaleString();
            } else if (raw === "") {
                this.value = "";
            }
        });
    }

    document.getElementById("calculateBtn")?.addEventListener("click", calculateOnGrid);
    document.getElementById("resetBtn")?.addEventListener("click", resetForm);

    const toggleBtn = document.getElementById("toggleDetailBtn");
    const detailSection = document.getElementById("detailedSection");
    if (toggleBtn && detailSection) {
        toggleBtn.addEventListener("click", () => {
            detailSection.style.display = (detailSection.style.display === "none" || detailSection.style.display === "") ? "block" : "none";
        });
    }

    const deviceSelectDay = document.getElementById("deviceSelect_day");
    const deviceSelectNight = document.getElementById("deviceSelect_night");

    for (let name in deviceOptions) {
        const optionDay = new Option(name, name);
        const optionNight = new Option(name, name);
        deviceSelectDay?.appendChild(optionDay);
        deviceSelectNight?.appendChild(optionNight);
    }
});

function addSelectedDevice(time) {
    const device = document.getElementById(`deviceSelect_${time}`).value;
    const hour = parseFloat(document.getElementById(`deviceHours${time === "day" ? "Day" : "Night"}Hour`).value || 0);
    const min = parseFloat(document.getElementById(`deviceHours${time === "day" ? "Day" : "Night"}Min`).value || 0);
    const duration = hour + (min / 60);

    if (!device || isNaN(duration) || duration <= 0) return;

    const power = deviceOptions[device];
    const entry = { name: device, watt: power, hour: duration };
    if (time === "day") devicesDay.push(entry);
    else devicesNight.push(entry);

    updateDeviceList(time);
}

function updateDeviceList(time) {
    const listId = time === "day" ? "deviceList" : "nideviceList";
    const listEl = document.getElementById(listId);
    const data = time === "day" ? devicesDay : devicesNight;

    listEl.innerHTML = data.map((d, i) =>
        `<div>${d.name} - ${d.watt}W √ó ${d.hour.toFixed(2)} ‡∏ä‡∏°. = ${(d.watt * d.hour).toFixed(2)} Wh
         <button onclick="removeDevice('${time}', ${i})">‚ùå</button></div>`
    ).join("");
}

function removeDevice(time, index) {
    if (time === "day") devicesDay.splice(index, 1);
    else devicesNight.splice(index, 1);
    updateDeviceList(time);
}

function calculateTotalLoad() {
    const calc = arr => arr.reduce((sum, d) => sum + (d.watt * d.hour), 0);
    const kWh = w => (w / 1000);
    const format = n => n.toLocaleString(undefined, { maximumFractionDigits: 2 });

    const dayLoad = calc(devicesDay);
    const nightLoad = calc(devicesNight);
    const totalLoad = dayLoad + nightLoad;

    const totalBill = kWh(totalLoad) * 4.5 * 30;
    const rawRecommendedKW = kWh(dayLoad) / 5 / 0.8;
    const recommendedSystem = getRecommendedSystemSize(rawRecommendedKW);
    const savedBill = kWh(dayLoad) * 4.5 * 30;
    const remainingBill = totalBill - savedBill;
    const percentSaved = (savedBill / totalBill) * 100;

    let systemNote = "";
    if (!recommendedSystem) {
        systemNote = `<span style="color:red;"><b>‚ùå ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏ô 100kW</b> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ö‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©</span><br>`;
    } else if (recommendedSystem.kw < 3) {
        systemNote = `<span style="color:orange;"><b>‚ö†Ô∏è ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 3kW</b> ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á</span><br>`;
    } else {
        systemNote = `<span style="color:green;"><b>‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</b> ${recommendedSystem.kw} kW (${recommendedSystem.watt} Watt)</span><br>`;
    }

    document.getElementById("resultArea").innerHTML = `
    <div class="results-box">
        ‚òÄÔ∏è ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô (10:00‚Äì15:00): <b>${format(kWh(dayLoad))}</b> kWh/‡∏ß‡∏±‡∏ô<br>
        üåô ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô (15:01‚Äì09:59): <b>${format(kWh(nightLoad))}</b> kWh/‡∏ß‡∏±‡∏ô<br>
        üîã ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏ä‡πâ‡∏£‡∏ß‡∏°‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô: <b>${format(kWh(totalLoad))}</b> kWh/‡∏ß‡∏±‡∏ô<br>
        üìÖ ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: <b>${format(totalBill)}</b> ‡∏ö‡∏≤‡∏ó<br>
        ‚òÄÔ∏è ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á (‡∏ú‡∏•‡∏¥‡∏ï‡∏ä‡πà‡∏ß‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô): <b>${format(rawRecommendedKW)}</b> kW<br>
        ${systemNote}<br>
        üìâ ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏ó‡∏µ‡πà‡∏•‡∏î‡πÑ‡∏î‡πâ: <b>${format(savedBill)}</b> ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô<br>
        üí∞ ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢: <b>${format(remainingBill)}</b> ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô<br>
        ‚ö°Ô∏è ‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: <b>${format(percentSaved)}</b>%<br>

        <p style="color: green; font-size: 0.9em;">
        ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü 4.5 ‡∏ö‡∏≤‡∏ó/‡∏´‡∏ô‡πà‡∏ß‡∏¢ ‡πÅ‡∏î‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 5 ‡∏ä‡∏°./‡∏ß‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏£‡∏∞‡∏ö‡∏ö 80%</p>
    </div>`;
}

function resetFormLoad(type) {
    if (type === 'day') {
        document.getElementById("deviceSelect_day").value = "";
        document.getElementById("deviceHoursDayHour").value = "";
        document.getElementById("deviceHoursDayMin").value = "";
        devicesDay = [];
        updateDeviceList('day');
    } else {
        document.getElementById("deviceSelect_night").value = "";
        document.getElementById("deviceHoursNightHour").value = "";
        document.getElementById("deviceHoursNightMin").value = "";
        devicesNight = [];
        updateDeviceList('night');
    }
}

function clearTotalLoad() {
    devicesDay = [];
    devicesNight = [];
    document.getElementById("deviceList").innerHTML = "";
    document.getElementById("nideviceList").innerHTML = "";
    document.getElementById("resultArea").innerHTML = "";
}
